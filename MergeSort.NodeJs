function merge(arr, l, mid, r) {
    let n1 = mid - l + 1;
    let n2 = r - mid;
    let a = new Array(n1);
    let b = new Array(n2);

    for (let i = 0; i < n1; i++) {
        a[i] = arr[l + i];
    }

    for (let i = 0; i < n2; i++) {
        b[i] = arr[mid + 1 + i];
    }

    let i = 0;
    let j = 0;
    let k = l;

    while (i < n1 && j < n2) {
        if (a[i] < b[j]) {
            arr[k] = a[i];
            k++;
            i++;
        } else {
            arr[k] = b[j];
            k++;
            j++;
        }
    }

    while (i < n1) {
        arr[k] = a[i];
        k++;
        i++;
    }

    while (j < n2) {
        arr[k] = b[j];
        k++;
        j++;
    }
}

function mergeSort(arr, l, r) {
    if (l < r) {
        let mid = Math.floor((l + r) / 2);
        mergeSort(arr, l, mid);
        mergeSort(arr, mid + 1, r);
        merge(arr, l, mid, r);
    }
}

let arr = [5, 4, 3, 2, 1];
mergeSort(arr, 0, arr.length - 1);
console.log(arr.join(" "));
